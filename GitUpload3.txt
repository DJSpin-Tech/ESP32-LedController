//Author: Declan Boyd, Project 3 - Addressable LED Light Strip project

void setup() {
  // put your setup code here, to run once:
  //Preset colors
  byte Array[3] Red = [255,0,0];
  byte Array[3] Orange = [255,127,0];
  byte Array[3] Yellow = [255,255,0];
  byte Array[3] LiteGreen = [127,255,0];
  byte Array[3] Green = [0,255,0];
  byte Array[3] Turq = [0,255,127];
  byte Array[3] Cyan = [0,255,255];
  byte Array[3] PowBlue = [0,127,255];
  byte Array[3] Indigo = [0,0,255];
  byte Array[3] Violet = [127,0,255];
  byte Array[3] Magenta = [255,0,255];
  byte Array[3] Pink = [255,0,127];
  byte Red = 0; //Initialize Red Value 
  byte Green = 0; //Initialize Green Value 
  byte Blue = 0; //Initialize Blue Value 
  int TotalLed = 256; //Temporary value for the number of total LEDs
  int Brightness = 0;
  Array[3] Color = [Red,Blue,Green];
  byte Array[3] TotalLEDs[256] = [0,0,0]; //Array where index is pointer from 0 to x - 1(Num of LEDs - 1) and color array is stored inside

void loop() {
  // put your main code here, to run repeatedly:

}
//Startup Protocol (Start button) -> button preset menu + custom preset button -> potentially a custom pattern w/ color function
//LED Preset 1 Static: Static Selected, Cycle through colors
void StaticSetting() {
  byte Array[3] StaticColor = CustomColorAdjuster();
  int Bright = BrightnessSelect();
}

//LED Preset 2 Pulse: Brightness of the previous LED (x - 1)
void PulseSetting(){
  byte Array[3] PulseColor = CustomColorAdjuster();
  int Bright = BrightnessSelect();
  //Introduce Sectioned Dimming To Make Pulses left and right
} 

//LED Preset 3 Snake: LEDs in sequence get longer as it meets an LED of same position that is an "apple" or different colored LED
void SnakeSetting (){
  byte Array[3] SnakeColor = CustomColorAdjuster();
  byte Array[3] AppleColor = CustomColorAdjuster();
  int Bright = BrightnessSelect();
  //Introduce snake movement with LED positioning / same with apple
}

//LED Preset 4 Every Other: LED 0 is on then every even LED is on x + 2
void EOSetting () {
  byte Array[3] EOColor = CustomColorAdjuster();
  for (int xLED = 0; xLED < 255; xLED++){
    if (xLED % 2 == 0){
      TotalLEDs[xLED] = EOColor;  
    }
  }
  
}

//LED Preset 5 Checkered: Same as Every other but every odd light is a diff color
void CheckeredSetting () {
  byte Array[3] CheckColor1 = CustomColorAdjuster();
  byte Array[3] CheckColor2 = CustomColorAdjuster();
  for (int xLED = 0; xLED < 255; xLED++){
    if (xLED % 2 == 0){
      TotalLEDs[xLED] = CheckColor1;    
    }
    else if (xLED % 2 == 1){
      TotalLEDs[xLED] = CheckColor2;
    }
    }
  }
  
}
//LED Preset 6 Rainbow: Self Explanitory
void RainbowSetting () {
  //12 colors for the Rainbow with each LED representing a different color and this pattern will repeat
  byte Array[3] Red = [255,0,0];
  byte Array[3] Orange = [255,127,0];
  byte Array[3] Yellow = [255,255,0];
  byte Array[3] LiteGreen = [127,255,0];
  byte Array[3] Green = [0,255,0];
  byte Array[3] Turq = [0,255,127];
  byte Array[3] Cyan = [0,255,255];
  byte Array[3] PowBlue = [0,127,255];
  byte Array[3] Indigo = [0,0,255];
  byte Array[3] Violet = [127,0,255];
  byte Array[3] Magenta = [255,0,255];
  byte Array[3] Pink = [255,0,127];
  for (int i = 0; i < 255; i = i + 12) {//Iterating every 12 LEDs need to figure out what to do with 
    TotalLEDs[i] = Red;
    TotalLEDs[i+1] = Orange;
    TotalLEDs[i+2] = Yellow;
    TotalLEDs[i+3] = LiteGreen;
    TotalLEDs[i+4] = Green;
    TotalLEDs[i+5] = Turq;
    TotalLEDs[i+6] = Cyan;
    TotalLEDs[i+7] = PowBlue;
    TotalLEDs[i+8] = Indigo;
    TotalLEDs[i+9] = Violet;
    TotalLEDs[i+10] = Magenta;
    TotalLEDs[i+11] = Pink;
  }
}


//Touchscreen button preset selector function

//Touch Screen buttons/GUI


//Custom Light Sequence Selection: X amount of buttons to represent a section of the LED Strip to create a repeatable pattern


//Color Selector: 12 base colors of the rainbow, modifiable option later 
//Color Selector Fuction
byte Array[3] CustomColorAdjuster () {
  //Screen Prompt: "What color would you like?" -> Display Arrow buttons with Color inbetween ->  Wait for user button press 
  If (RRightButton.isPressed) { //Switch To Case Statements
    Color[0]++;//Red byte is at index 0 in the array
  else if (RLeftButton.isPressed) {
    Color[0]--;
  }  
  If (GRightButton.isPressed) { //Switch To Case Statements
    Color[1]++;//Green byte is at index 1 in the array
  else if (GLeftButton.isPressed) {
    Color[1]--;
  If (BRightButton.isPressed) { //Switch To Case Statements
    Color[2]++;//Blue byte is at index 2  in the array
  else if (BLeftButton.isPressed) {
    Color[2]--;
  }
  return Color;
}

//Brightness Selector 
int BrightnessSelect () {
  If (BrightRightButton.isPressed && Brightness < 10){
    Brightness++;
  }
  else if (BrightLeftButton.isPressed && Brightness > 1){
    Brightness--;
  }
}
//Wifi protocols